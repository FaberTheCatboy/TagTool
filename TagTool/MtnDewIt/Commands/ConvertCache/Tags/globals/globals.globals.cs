using TagTool.Cache;
using TagTool.Cache.HaloOnline;
using TagTool.Tags.Definitions;
using System.Collections.Generic;
using TagTool.Common;
using TagTool.Ai;
using System.IO;

namespace TagTool.MtnDewIt.Commands.ConvertCache.Tags 
{
    public class globals_globals_globals : TagFile
    {
        public globals_globals_globals(GameCache cache, GameCacheHaloOnline cacheContext, Stream stream) : base
        (
            cache,
            cacheContext,
            stream
        )
        {
            Cache = cache;
            CacheContext = cacheContext;
            Stream = stream;
            TagData();
        }

        public override void TagData()
        {
            var tag = GetCachedTag<Globals>($@"globals\globals");
            var matg = CacheContext.Deserialize<Globals>(Stream, tag);
            matg.HavokCleanupResources = new List<Globals.HavokCleanupResource>()
            {
                new Globals.HavokCleanupResource()
                {
                    ObjectCleanupEffect = GetCachedTag<Effect>($@"fx\scenery_fx\havok\havok_collection"),
                },
            };
            matg.SoundGlobals = new List<SoundGlobalsDefinition>()
            {
                new SoundGlobalsDefinition()
                {
                    SoundClasses = GetCachedTag<SoundClasses>($@"sound\sound_classes"),
                    SoundEffects = GetCachedTag<SoundEffectCollection>($@"sound\global_fx"),
                    SoundMix = GetCachedTag<SoundMix>($@"sound\sound_mix"),
                    SoundCombatDialogueConstants = GetCachedTag<SoundDialogueConstants>($@"sound\combat_dialogue_constants"),
                    SoundGlobalPropagation = GetCachedTag<SoundGlobalPropagation>($@"sound\default"),
                },
            };
            matg.AiGlobals = new List<AiGlobalsDatum>()
            {
                new AiGlobalsDatum()
                {
                    AiInfantryOnAiWeaponDamageScale = 0.6f,
                    AiVehicleOnAiWeaponDamageScale = 0.6f,
                    AiInPlayerVehicleOnAiWeaponDamageScale = 1f,
                    DangerBroadlyFacing = 2f,
                    DangerShootingNear = 4f,
                    DangerShootingAt = 6f,
                    DangerExtremelyClose = 6.5f,
                    DangerShieldDamage = 7f,
                    DangerExtendedShieldDamage = 8f,
                    DangerBodyDamage = 9f,
                    DangerExtendedBodyDamage = 10f,
                    GlobalDialogue = GetCachedTag<AiDialogueGlobals>($@"ai\ai_dialogue_globals"),
                    JumpDown = 0.8f,
                    JumpStep = 1.2f,
                    JumpCrouch = 1.95f,
                    JumpStand = 2.85f,
                    JumpStorey = 4.5f,
                    JumpTower = 10.5f,
                    MaxJumpDownHeightDown = 0.1f,
                    MaxJumpDownHeightStep = 0.5f,
                    MaxJumpDownHeightCrouch = 1.5f,
                    MaxJumpDownHeightStand = 3f,
                    MaxJumpDownHeightStorey = 8f,
                    MaxJumpDownHeightTower = 16f,
                    HoistStep = new Bounds<float>(0.1f, 0.4f),
                    HoistCrouch = new Bounds<float>(0.3f, 0.6f),
                    HoistStand = new Bounds<float>(0.75f, 1.25f),
                    VaultStep = new Bounds<float>(0.1f, 0.4f),
                    VaultCrouch = new Bounds<float>(0.3f, 0.6f),
                    ScaryTargetThreshold = 7f,
                    ScaryWeaponThreshold = 8f,
                    PlayerScariness = 6f,
                    BerserkingActorScariness = 12f,
                    KamikazeingActorScariness = 8f,
                    InvincibleActorScariness = 100f,
                    MinimumDeathTime = 8f,
                    ProjectileDistance = 10f,
                    IdleClumpDistance = 6f,
                    DangerousClumpDistance = 4f,
                    ConverSearchDuration = 5f,
                    TaskSearchDuration = 5f,
                    Unknown7 = 10f,
                    GravemindProperties = new List<AiGlobalsDatum.GravemindPropertyBlock>()
                    {
                        new AiGlobalsDatum.GravemindPropertyBlock()
                        {
                            MinimumRetreatTime = 4f,
                            IdealRetreatTime = 7f,
                            MaximumRetreatTime = 14f,
                        },
                    },
                    Styles = new List<TagReferenceBlock>()
                    {
                        new TagReferenceBlock()
                        {
                            Instance = GetCachedTag<Style>($@"ai\normal"),
                        },
                        new TagReferenceBlock()
                        {
                            Instance = GetCachedTag<Style>($@"ai\bunkering"),
                        },
                        new TagReferenceBlock()
                        {
                            Instance = GetCachedTag<Style>($@"ai\assaulting"),
                        },
                    },
                }
            };
            matg.AiGlobalsTag = GetCachedTag<AiGlobals>($@"globals\ai_globals");
            matg.DamageTable = new List<Globals.DamageTableBlock>()
            {
                new Globals.DamageTableBlock()
                {
                    DamageGroups = new List<Globals.DamageTableBlock.DamageGroup>()
                    {
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"melee"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"infection"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"all"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"sniper"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.5f
                                },
                            }
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"bullet_slow"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"plasma_slow"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.35f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"sentinel"),
                                    DamageMultiplier = 4f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"bullet_fast"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"plasma_fast"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"sentinel"),
                                    DamageMultiplier = 2f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"bullet_vehicle"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"plasma_vehicle"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"sentinel"),
                                    DamageMultiplier = 2f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_small"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_attached"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_large"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_solid"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_solid"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"collision"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.75f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"cutting"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"burning"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"emp"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.001f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.001f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"laser"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_carrier"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"infection"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"anti_flood"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"no_damage"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                                },
                            },
                        },
                    },
                },
                new Globals.DamageTableBlock()
                {
                    DamageGroups = new List<Globals.DamageTableBlock.DamageGroup>()
                    {
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"melee"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                                    DamageMultiplier = 2f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"infection"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"all"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"sniper"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                            }
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"bullet_slow"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 0.15f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 0.1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.75f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                                    DamageMultiplier = 4f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"plasma_slow"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 0.15f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 0.1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.75f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 0.2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.11667f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"sentinel"),
                                    DamageMultiplier = 4f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_player"),
                                    DamageMultiplier = 3f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"bullet_fast"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                                    DamageMultiplier = 4f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"plasma_fast"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.3333334f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"sentinel"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_player"),
                                    DamageMultiplier = 3f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"bullet_vehicle"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.4f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                                    DamageMultiplier = 4f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"plasma_vehicle"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"sentinel"),
                                    DamageMultiplier = 2f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_small"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_attached"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_large"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"tough_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_solid"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_terrain"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"hard_floodflesh"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_thick"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_solid"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId(@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"collision"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"cutting"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                                    DamageMultiplier = 2f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"burning"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.25f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_player"),
                                    DamageMultiplier = 4f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"emp"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 0.001f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.001f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 1f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"laser"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                    DamageMultiplier = 1f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"explosion_carrier"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"infection"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                    DamageMultiplier = 1f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 0.25f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                    DamageMultiplier = 2f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                    DamageMultiplier = 0.5f
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                    DamageMultiplier = 0.5f
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"anti_flood"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                    DamageMultiplier = 2f,
                                },
                            },
                        },
                        new Globals.DamageTableBlock.DamageGroup
                        {
                            Name = CacheContext.StringTable.GetStringId($@"no_damage"),
                            ArmorModifiers = new List<Globals.DamageTableBlock.DamageGroup.ArmorModifier>()
                            {
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"material"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                                },
                                new Globals.DamageTableBlock.DamageGroup.ArmorModifier
                                {
                                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                                },
                            },
                        },
                    },
                },
            };
            matg.Sounds = new List<TagReferenceBlock>()
            {
                new TagReferenceBlock()
                {
                },
                new TagReferenceBlock()
                {
                },
            };
            matg.Camera = new List<CameraGlobalsDefinition>()
            {
                new CameraGlobalsDefinition()
                {
                    DefaultUnitCameraTrack = GetCachedTag<CameraTrack>($@"globals\default_unit_camera_track"),
                    YawScale = 1f,
                    PitchScale = 1f,
                    ForwardScale = 2.25f,
                    SideScale = 2.25f,
                    UpScale = 2f,
                    DeathcamTransitionTime = 1.5f,
                    FallDeathcamTransitionTime = 0.7f,
                    DeathcamInitialDistance = 3.2f,
                    DeathcamFinalDistance = 1.8f,
                    DeathcamZOffset = 0.2f,
                    DeathcamMaximumElevation = 0.26f,
                    DeathcamTrackingDelay = 0.3f,
                    DeathcamOrbitDelay = 2f,
                    FallDeathcamMinimumVelocity = 0.05f,
                    FlyingMaxBoostSpeed = 5f,
                    FlyingTimeToMaximumBoost = 0.5f,
                    FlyingZoomedFov = 20f,
                    FlyingZoomedLookSpeedScale = 0.5f,
                    FlyingBoundingSphereRadius = 0.2f,
                    FlyingMovementDelay = 0.3f,
                    FlyingZoomTransitionTime = 0.5f,
                    FlyingVerticalMaxSpeedTime = 1.5f,
                    HoistFunction = FunctionType.Early,
                    OrbitCamDistanceBounds = new Bounds<float>(0.85f, 2.5f),
                    OrbitCamMovementDelay = 0.2f,
                    OrbitCamZOffset = 0.2f,
                    OrbitCamElevationAngleBounds = new Bounds<float>(-0.2f, 0.78f),
                    SavedFilmMaxPlaybackSpeed = 5f,
                    SavedFilmFadeOutTime = 0.3f,
                    SavedFilmFadeInTime = 0.3f,
                    EnterVehicleTransitionTime = 0.55f,
                    ExitVehicleTransitionTime = 0.5f,
                },
            };
            matg.PlayerControl = new List<Globals.PlayerControlBlock>()
            {
                new Globals.PlayerControlBlock()
                {
                    CrosshairMagnetismFriction = 0.625f,
                    CrosshairMagnetismAdhesion = 0.625f,
                    InconsequentialTargetScale = 0.35f,
                    CrosshairLocation = new RealPoint2d(0f, 0.17f),
                    SprintStartDelay = 0f,
                    SprintFullSpeedTime = 1f,
                    SprintDecayRate = 1f,
                    SprintFullSpeedMultiplier = 0.72f,
                    SprintPeggedMagnitude = 0.9f,
                    SprintPeggedAngularThreshold = 10f,
                    StaminaDepleteRestoreTime = 4.5f,
                    SprintCooldownTime = 0.35f,
                    LookDefaultPitchRate = 60f,
                    LookDefaultYawRate = 120f,
                    LookPegThreshold = 0.95f,
                    LookYawAccelerationTime = 0.8f,
                    LookYawAccelerationScale = 2.5f,
                    LookPitchAccelerationTime = 0.8f,
                    LookPitchAccelerationScale = 2.5f,
                    LookAutolevelingScale = 0.75f,
                    MinimumAutolevelingTicks = 15,
                    LookFunction = new List<Globals.PlayerControlBlock.LookFunctionBlock>()
                    {
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {

                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.05f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.1f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.25f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.58f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 1f,
                        },
                    },
                },
                new Globals.PlayerControlBlock()
                {
                    CrosshairMagnetismFriction = 0.625f,
                    CrosshairMagnetismAdhesion = 0.625f,
                    InconsequentialTargetScale = 0.35f,
                    CrosshairLocation = new RealPoint2d(0f, 0.17f),
                    SprintFullSpeedTime = 1f,
                    SprintDecayRate = 1f,
                    SprintFullSpeedMultiplier = 0.72f,
                    SprintPeggedMagnitude = 0.9f,
                    SprintPeggedAngularThreshold = 10f,
                    StaminaDepleteRestoreTime = 4.5f,
                    SprintCooldownTime = 0.35f,
                    LookDefaultPitchRate = 60f,
                    LookDefaultYawRate = 120f,
                    LookPegThreshold = 0.95f,
                    LookYawAccelerationTime = 0.8f,
                    LookYawAccelerationScale = 2.5f,
                    LookPitchAccelerationTime = 0.8f,
                    LookPitchAccelerationScale = 2.5f,
                    LookAutolevelingScale = 0.75f,
                    MinimumAutolevelingTicks = 15,
                    LookFunction = new List<Globals.PlayerControlBlock.LookFunctionBlock>()
                    {
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {

                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.05f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.1f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.25f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 0.58f,
                        },
                        new Globals.PlayerControlBlock.LookFunctionBlock()
                        {
                            Scale = 1f,
                        },
                    },
                },
            };
            matg.Difficulty = new List<Globals.DifficultyBlock>()
            {
                new Globals.DifficultyBlock()
                {
                    EasyEnemyDamage = 0.1f,
                    NormalEnemyDamage = 0.775f,
                    HardEnemyDamage = 1f,
                    ImpossibleEnemyDamage = 1.6f,
                    EasyEnemyVitality = 1f,
                    NormalEnemyVitality = 1f,
                    HardEnemyVitality = 1f,
                    ImpossibleEnemyVitality = 1f,
                    EasyEnemyShield = 1f,
                    NormalEnemyShield = 1f,
                    HardEnemyShield = 1f,
                    ImpossibleEnemyShield = 1f,
                    EasyEnemyRecharge = 1.4f,
                    NormalEnemyRecharge = 1f,
                    HardEnemyRecharge = 0.7f,
                    ImpossibleEnemyRecharge = 0.3f,
                    NormalFriendDamage = 1f,
                    HardFriendDamage = 1f,
                    ImpossibleFriendDamage = 1f,
                    EasyFriendVitality = 1f,
                    NormalFriendVitality = 1f,
                    HardFriendVitality = 1f,
                    ImpossibleFriendVitality = 1f,
                    EasyFriendShield = 1f,
                    NormalFriendShield = 1f,
                    HardFriendShield = 1f,
                    ImpossibleFriendShield = 1f,
                    EasyFriendRecharge = 1f,
                    NormalFriendRecharge = 1f,
                    HardFriendRecharge = 1f,
                    ImpossibleFriendRecharge = 1f,
                    EasyInfectionForms = -0.5f,
                    NormalInfectionForms = -0.5f,
                    HardInfectionForms = 0.15f,
                    ImpossibleInfectionForms = 0.65f,
                    EasyRateOfFire = 1f,
                    NormalRateOfFire = 1f,
                    HardRateOfFire = 1f,
                    ImpossibleRateOfFire = 1f,
                    EasyProjectileError = 1f,
                    NormalProjectileError = 1f,
                    HardProjectileError = 1f,
                    ImpossibleProjectileError = 1f,
                    EasyBurstError = 1f,
                    NormalBurstError = 1f,
                    HardBurstError = 1f,
                    ImpossibleBurstError = 1f,
                    EasyNewTargetDelay = 1f,
                    NormalNewTargetDelay = 1f,
                    HardNewTargetDelay = 1f,
                    ImpossibleNewTargetDelay = 1f,
                    EasyBurstSeparation = 1f,
                    NormalBurstSeparation = 1f,
                    HardBurstSeparation = 1f,
                    ImpossibleBurstSeparation = 1f,
                    EasyTargetLeading = 1f,
                    NormalTargetLeading = 1f,
                    HardTargetLeading = 1f,
                    ImpossibleTargetLeading = 1f,
                    NormalOverchargeChance = 0.1f,
                    HardOverchargeChance = 0.6f,
                    ImpossibleOverchargeChance = 1f,
                    EasySpecialFireDelay = 10f,
                    NormalSpecialFireDelay = 2f,
                    HardSpecialFireDelay = 1.5f,
                    ImpossibleSpecialFireDelay = 1f,
                    EasyGuidanceVsPlayer = 0.1f,
                    NormalGuidanceVsPlayer = 0.5f,
                    HardGuidanceVsPlayer = 0.75f,
                    ImpossibleGuidanceVsPlayer = 1f,
                    EasyMeleeDelayBase = 1f,
                    NormalMeleeDelayBase = 1f,
                    HardMeleeDelayBase = 1f,
                    ImpossibleMeleeDelayBase = 1f,
                    EasyMeleeDelayScale = 4f,
                    NormalMeleeDelayScale = 2f,
                    HardMeleeDelayScale = 1f,
                    ImpossibleMeleeDelayScale = 0.25f,
                    NormalGrenadeChanceScale = 0.5f,
                    HardGrenadeChanceScale = 0.85f,
                    ImpossibleGrenadeChanceScale = 1.5f,
                    EasyGrenadeTimerScale = 3f,
                    NormalGrenadeTimerScale = 1.25f,
                    HardGrenadeTimerScale = 1.1f,
                    ImpossibleGrenadeTimerScale = 0.5f,
                    NormalMajorUpgradenormal = 0.1f,
                    HardMajorUpgradenormal = 0.3f,
                    ImpossibleMajorUpgradenormal = 0.5f,
                    HardMajorUpgradefew = 0.1f,
                    ImpossibleMajorUpgradefew = 0.3f,
                    NormalMajorUpgrademany = 0.3f,
                    HardMajorUpgrademany = 0.5f,
                    ImpossibleMajorUpgrademany = 0.7f,
                    NormalPlayerVehicleRamChance = 0.1f,
                    HardPlayerVehicleRamChance = 0.5f,
                    ImpossiblePlayerVehicleRamChance = 1f,
                },
                new Globals.DifficultyBlock()
                {
                    EasyEnemyDamage = 0.25f,
                    NormalEnemyDamage = 0.875f,
                    HardEnemyDamage = 1.1f,
                    ImpossibleEnemyDamage = 1.65f,
                    EasyEnemyVitality = 1.1f,
                    NormalEnemyVitality = 1.1f,
                    HardEnemyVitality = 1.1f,
                    ImpossibleEnemyVitality = 1.1f,
                    EasyEnemyShield = 1.1f,
                    NormalEnemyShield = 1.1f,
                    HardEnemyShield = 1.1f,
                    ImpossibleEnemyShield = 1.1f,
                    EasyEnemyRecharge = 1.4f,
                    NormalEnemyRecharge = 1f,
                    HardEnemyRecharge = 0.7f,
                    ImpossibleEnemyRecharge = 0.3f,
                    NormalFriendDamage = 1f,
                    HardFriendDamage = 1f,
                    ImpossibleFriendDamage = 1f,
                    EasyFriendVitality = 1f,
                    NormalFriendVitality = 1f,
                    HardFriendVitality = 1f,
                    ImpossibleFriendVitality = 1f,
                    EasyFriendShield = 1f,
                    NormalFriendShield = 1f,
                    HardFriendShield = 1f,
                    ImpossibleFriendShield = 1f,
                    EasyFriendRecharge = 1f,
                    NormalFriendRecharge = 1f,
                    HardFriendRecharge = 1f,
                    ImpossibleFriendRecharge = 1f,
                    EasyInfectionForms = -0.5f,
                    NormalInfectionForms = -0.5f,
                    HardInfectionForms = 0.15f,
                    ImpossibleInfectionForms = 0.65f,
                    EasyRateOfFire = 1f,
                    NormalRateOfFire = 1f,
                    HardRateOfFire = 1f,
                    ImpossibleRateOfFire = 1f,
                    EasyProjectileError = 1f,
                    NormalProjectileError = 1f,
                    HardProjectileError = 1f,
                    ImpossibleProjectileError = 1f,
                    EasyBurstError = 1f,
                    NormalBurstError = 1f,
                    HardBurstError = 1f,
                    ImpossibleBurstError = 1f,
                    EasyNewTargetDelay = 1f,
                    NormalNewTargetDelay = 1f,
                    HardNewTargetDelay = 1f,
                    ImpossibleNewTargetDelay = 1f,
                    EasyBurstSeparation = 1f,
                    NormalBurstSeparation = 1f,
                    HardBurstSeparation = 1f,
                    ImpossibleBurstSeparation = 1f,
                    EasyTargetLeading = 1f,
                    NormalTargetLeading = 1f,
                    HardTargetLeading = 1f,
                    ImpossibleTargetLeading = 1f,
                    NormalOverchargeChance = 0.1f,
                    HardOverchargeChance = 0.6f,
                    ImpossibleOverchargeChance = 1f,
                    EasySpecialFireDelay = 10f,
                    NormalSpecialFireDelay = 2f,
                    HardSpecialFireDelay = 1.5f,
                    ImpossibleSpecialFireDelay = 1f,
                    EasyGuidanceVsPlayer = 0.1f,
                    NormalGuidanceVsPlayer = 0.5f,
                    HardGuidanceVsPlayer = 0.75f,
                    ImpossibleGuidanceVsPlayer = 1f,
                    EasyMeleeDelayBase = 1f,
                    NormalMeleeDelayBase = 1f,
                    HardMeleeDelayBase = 1f,
                    ImpossibleMeleeDelayBase = 1f,
                    EasyMeleeDelayScale = 4f,
                    NormalMeleeDelayScale = 2f,
                    HardMeleeDelayScale = 1f,
                    ImpossibleMeleeDelayScale = 0.25f,
                    NormalGrenadeChanceScale = 0.5f,
                    HardGrenadeChanceScale = 0.85f,
                    ImpossibleGrenadeChanceScale = 1.5f,
                    EasyGrenadeTimerScale = 3f,
                    NormalGrenadeTimerScale = 1.25f,
                    HardGrenadeTimerScale = 1.1f,
                    ImpossibleGrenadeTimerScale = 0.5f,
                    NormalMajorUpgradenormal = 0.1f,
                    HardMajorUpgradenormal = 0.3f,
                    ImpossibleMajorUpgradenormal = 0.5f,
                    HardMajorUpgradefew = 0.1f,
                    ImpossibleMajorUpgradefew = 0.3f,
                    NormalMajorUpgrademany = 0.3f,
                    HardMajorUpgrademany = 0.5f,
                    ImpossibleMajorUpgrademany = 0.7f,
                    NormalPlayerVehicleRamChance = 0.1f,
                    HardPlayerVehicleRamChance = 0.5f,
                    ImpossiblePlayerVehicleRamChance = 1f,
                },
            };
            matg.Grenades = new List<Globals.Grenade>()
            {
                new Globals.Grenade()
                {
                    MaximumCount = 2,
                    ThrowingEffect = GetCachedTag<Effect>($@"sound\weapons\frag_grenade\frag_throw"),
                    Equipment = GetCachedTag<Equipment>($@"objects\weapons\grenade\frag_grenade\frag_grenade"),
                    Projectile = GetCachedTag<Projectile>($@"objects\weapons\grenade\frag_grenade\frag_grenade"),
                },
                new Globals.Grenade()
                {
                    MaximumCount = 2,
                    ThrowingEffect = GetCachedTag<Effect>($@"sound\weapons\plasma_grenade\throwgren"),
                    Equipment = GetCachedTag<Equipment>($@"objects\weapons\grenade\plasma_grenade\plasma_grenade"),
                    Projectile = GetCachedTag<Projectile>($@"objects\weapons\grenade\plasma_grenade\plasma_grenade"),
                },
                new Globals.Grenade()
                {
                    MaximumCount = 2,
                    ThrowingEffect = GetCachedTag<Effect>($@"sound\weapons\claymore_grenade\claymore_throw"),
                    Equipment = GetCachedTag<Equipment>($@"objects\weapons\grenade\claymore_grenade\claymore_grenade"),
                    Projectile = GetCachedTag<Projectile>($@"objects\weapons\grenade\claymore_grenade\claymore_grenade"),
                },
                new Globals.Grenade()
                {
                    MaximumCount = 2,
                    ThrowingEffect = GetCachedTag<Effect>($@"sound\weapons\firebomb\firebomb_throw"),
                    Equipment = GetCachedTag<Equipment>($@"objects\weapons\grenade\firebomb_grenade\firebomb_grenade"),
                    Projectile = GetCachedTag<Projectile>($@"objects\weapons\grenade\firebomb_grenade\projectiles\firebomb_grenade"),
                },
            };
            matg.InterfaceTags = new List<Globals.InterfaceTagsBlock>()
            {
                new Globals.InterfaceTagsBlock()
                {
                    HudColorTable = GetCachedTag<ColorTable>($@"ui\hud"),
                    EditorColorTable = GetCachedTag<ColorTable>($@"ui\editor"),
                    DialogColorTable = GetCachedTag<ColorTable>($@"ui\dialog"),
                    InterfaceGooMap3 = GetCachedTag<Bitmap>($@"rasterizer\plasma_noise"),
                    MainMenuUiGlobals = GetCachedTag<UserInterfaceGlobalsDefinition>($@"ui\main_menu"),
                    SinglePlayerUiGlobals = GetCachedTag<UserInterfaceGlobalsDefinition>($@"ui\single_player"),
                    MultiplayerUiGlobals = GetCachedTag<UserInterfaceGlobalsDefinition>($@"ui\multiplayer"),
                    HudGlobals = GetCachedTag<ChudGlobalsDefinition>($@"ui\chud\globals"),
                    GfxUiStrings = new List<Globals.InterfaceTagsBlock.GfxUiString>
                    {
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "dmg",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"ui\global_strings\damage_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "main",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\main_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "settings",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\settings_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "lobby",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\lobby_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "eeditor",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\emblem_editor_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "carousel",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\carousel_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "cons",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\consumable_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "wpn",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\weapon_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "ingame",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\ingame_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "armor",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\armor_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "msg",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\message_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "bn",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\buy_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "gm",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\game_mode_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "map",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\map_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "load",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\loading_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "tip",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\tip_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "lvl",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\level_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "profile",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\profile_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "aclass",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\class_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "man",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\manufacturer_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "medal",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\medal_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "ps",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\playlist_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "drt",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\damage_reporting_type_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "challenge",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\challenge_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "career",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\career_strings"),
                        },
                        new Globals.InterfaceTagsBlock.GfxUiString
                        {
                            Name = "mod",
                            Strings = GetCachedTag<MultilingualUnicodeStringList>($@"hf2p\strings\mod_strings"),
                        },
                    },
                },
            };
            matg.PlayerInformation = new List<Globals.PlayerInformationBlock>()
            {
                new Globals.PlayerInformationBlock()
                {
                    WalkingSpeed = 0.512f,
                    RunForward = 2.5f,
                    RunBackward = 2.2f,
                    RunSideways = 2.2f,
                    RunAcceleration = 9.6f,
                    SneakForward = 0.9f,
                    SneakBackward = 0.65f,
                    SneakSideways = 0.6f,
                    SneakAcceleration = 4.8f,
                    AirborneAcceleration = 1.05f,
                    GrenadeOrigin = new RealPoint3d(0f, 0.05f, 0f),
                    StunMovementPenalty = 0.8f,
                    StunTurningPenalty = 0.8f,
                    StunJumpingPenalty = 1f,
                    StunTimeRange = new Bounds<float>(0f, 4f),
                    FirstPersonIdleTimeRange = new Bounds<float>(15f, 45f),
                    FirstPersonSkipFraction = 0.75f,
                    CoopRespawnEffect = GetCachedTag<Effect>($@"objects\characters\masterchief\fx\coop_teleport"),
                    BinocularsZoomCount = 1,
                    BinocularZoomRange = new Bounds<float>(3f, 3f),
                    Unknown5 = 1.5f,
                    Unknown6 = 0.7f,
                    FlashlightOn = GetCachedTag<Sound>($@"sound\weapons\battle_rifle\flashlight"),
                    FlashlightOff = GetCachedTag<Sound>($@"sound\weapons\battle_rifle\flashlight"),
                    DefaultDamageResponse = GetCachedTag<DamageResponseDefinition>($@"globals\damage_responses\default"),
                },
                new Globals.PlayerInformationBlock()
                {
                    WalkingSpeed = 0.512f,
                    RunForward = 2.5f,
                    RunBackward = 2.2f,
                    RunSideways = 2.2f,
                    RunAcceleration = 9.6f,
                    SneakForward = 0.9f,
                    SneakBackward = 0.65f,
                    SneakSideways = 0.6f,
                    SneakAcceleration = 4.8f,
                    AirborneAcceleration = 1.05f,
                    GrenadeOrigin = new RealPoint3d(0f, 0.05f, 0f),
                    StunMovementPenalty = 0.8f,
                    StunTurningPenalty = 0.8f,
                    StunJumpingPenalty = 1f,
                    StunTimeRange = new Bounds<float>(0f, 4f),
                    FirstPersonIdleTimeRange = new Bounds<float>(15f, 45f),
                    FirstPersonSkipFraction = 0.75f,
                    CoopRespawnEffect = GetCachedTag<Effect>($@"objects\characters\masterchief\fx\coop_teleport"),
                    BinocularsZoomCount = 1,
                    BinocularZoomRange = new Bounds<float>(3f, 3f),
                    Unknown5 = 1.5f,
                    Unknown6 = 0.7f,
                    FlashlightOn = GetCachedTag<Sound>($@"sound\weapons\battle_rifle\flashlight"),
                    FlashlightOff = GetCachedTag<Sound>($@"sound\weapons\battle_rifle\flashlight"),
                    DefaultDamageResponse = GetCachedTag<DamageResponseDefinition>($@"globals\damage_responses\default"),
                },
            };
            matg.PlayerRepresentation = new List<Globals.PlayerRepresentationBlock>()
            {
                new Globals.PlayerRepresentationBlock()
                {
                    Name = CacheContext.StringTable.GetStringId($@"spartan"),
                    FirstPersonHands = GetCachedTag<RenderModel>($@"objects\characters\masterchief\fp\fp"),
                    FirstPersonBody = GetCachedTag<RenderModel>($@"objects\characters\masterchief\fp_body\fp_body"),
                    ThirdPersonUnit = GetCachedTag<Biped>($@"objects\characters\masterchief\masterchief"),
                    BinocularsZoomInSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_in_click"),
                    BinocularsZoomOutSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_out_click"),
                },
                new Globals.PlayerRepresentationBlock()
                {
                    Name = CacheContext.StringTable.GetStringId($@"dervish"),
                    FirstPersonHands = GetCachedTag<RenderModel>($@"objects\characters\dervish\fp\fp"),
                    FirstPersonBody = GetCachedTag<RenderModel>($@"objects\characters\dervish\fp_body\fp_body"),
                    ThirdPersonUnit = GetCachedTag<Biped>($@"objects\characters\dervish\dervish"),
                    BinocularsZoomInSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_in_click"),
                    BinocularsZoomOutSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_out_click"),
                    Flags = 1,
                },
                new Globals.PlayerRepresentationBlock()
                {
                    Name = CacheContext.StringTable.GetStringId($@"mp_spartan"),
                    FirstPersonHands = GetCachedTag<RenderModel>($@"objects\characters\masterchief\mp_masterchief\fp\fp"),
                    FirstPersonBody = GetCachedTag<RenderModel>($@"objects\characters\masterchief\mp_masterchief\fp_body\fp_body"),
                    ThirdPersonUnit = GetCachedTag<Biped>($@"objects\characters\masterchief\mp_masterchief\mp_masterchief"),
                    BinocularsZoomInSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_in_click"),
                    BinocularsZoomOutSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_out_click"),
                },
                new Globals.PlayerRepresentationBlock()
                {
                    Name = CacheContext.StringTable.GetStringId($@"mp_elite"),
                    FirstPersonHands = GetCachedTag<RenderModel>($@"objects\characters\elite\mp_elite\fp\fp"),
                    FirstPersonBody = GetCachedTag<RenderModel>($@"objects\characters\elite\mp_elite\fp_body\fp_body"),
                    ThirdPersonUnit = GetCachedTag<Biped>($@"objects\characters\elite\mp_elite\mp_elite"),
                    BinocularsZoomInSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_in_click"),
                    BinocularsZoomOutSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_out_click"),
                    Flags = 1,
                },
                new Globals.PlayerRepresentationBlock()
                {
                    Name = CacheContext.StringTable.GetStringId($@"sp_elite"),
                    FirstPersonHands = GetCachedTag<RenderModel>($@"objects\characters\elite\fp_arms\fp_arms"),
                    FirstPersonBody = GetCachedTag<RenderModel>($@"objects\characters\elite\fp_body\fp_body"),
                    ThirdPersonUnit = GetCachedTag<Biped>($@"objects\characters\elite\elite_sp"),
                    BinocularsZoomInSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_in_click"),
                    BinocularsZoomOutSound = GetCachedTag<Sound>($@"sound\game_sfx\ui\binoculars\binocs_out_click"),
                    Flags = 1,
                },
                new Globals.PlayerRepresentationBlock()
                {
                    Name = CacheContext.StringTable.GetStringId($@"monitor"),
                    ThirdPersonUnit = GetCachedTag<Biped>($@"objects\characters\monitor\monitor_editor"),
                },
            };
            matg.PlayerCharacterTypes = new List<Globals.PlayerCharacterType>()
            {
                new Globals.PlayerCharacterType()
                {
                    Name = CacheContext.StringTable.GetStringId($@"masterchief"),
                    Flags = TagTool.Tags.Definitions.Globals.PlayerCharacterType.FlagsValue.None,
                    PlayerInformation = 0,
                    PlayerControl = 0,
                    CampaignRepresentation = 0,
                    MultiplayerRepresentation = 2,
                    MultiplayerArmorCustomization = 0,
                    ChudGlobals = 0,
                    FirstPersonInterface = 0,
                },
                new Globals.PlayerCharacterType()
                {
                    Name = CacheContext.StringTable.GetStringId($@"dervish"),
                    Flags = TagTool.Tags.Definitions.Globals.PlayerCharacterType.FlagsValue.None,
                    PlayerInformation = 1,
                    PlayerControl = 1,
                    CampaignRepresentation = 1,
                    MultiplayerRepresentation = 3,
                    MultiplayerArmorCustomization = 1,
                    ChudGlobals = 1,
                    FirstPersonInterface = 1,
                },
                new Globals.PlayerCharacterType()
                {
                    Name = CacheContext.StringTable.GetStringId($@"monitor"),
                    Flags = TagTool.Tags.Definitions.Globals.PlayerCharacterType.FlagsValue.None,
                    PlayerInformation = 0,
                    PlayerControl = 0,
                    CampaignRepresentation = 5,
                    MultiplayerRepresentation = 5,
                    MultiplayerArmorCustomization = 0,
                    ChudGlobals = 2,
                    FirstPersonInterface = 0,
                }
            };
            matg.FallDamage = new List<Globals.FallingDamageBlock>()
            {
                new Globals.FallingDamageBlock()
                {
                    HarmfulFallingDistanceBounds = new Bounds<float>(6f, 10f),
                    FallingDamage = GetCachedTag<DamageEffect>($@"globals\falling"),
                    SoftLandingDamage = GetCachedTag<DamageEffect>($@"globals\collision_damage\landing_soft"),
                    HardLandingDamage = GetCachedTag<DamageEffect>($@"globals\collision_damage\landing_hard"),
                    ScriptDamage = GetCachedTag<DamageEffect>($@"globals\hs_damage"),
                    MaximumFallingDistance = 14f,
                    DistanceDamage = GetCachedTag<DamageEffect>($@"globals\distance"),
                    RuntimeMaximumFallingVelocity = 9.478529f,
                    RuntimeDamageVelocityBounds = new Bounds<float>(6.205154f, 8.010819f),
                },
            };
            matg.ShieldBoost = new List<Globals.ShieldBoostBlock>()
            {
                new Globals.ShieldBoostBlock()
                {
                    ShieldBoostDecay = 100f,
                    ShieldBoostRechargeTime = 1f,
                    ShieldBoostStunTime = 1f,
                },
            };
            matg.Materials = new List<Globals.Material>()
            {
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"default_material"),
                    RuntimeMaterialIndex = -1,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"material"),
                    Friction = 0.9f,
                    Restitution = 0.2f,
                    Density = 2500,
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid"),
                    ParentName = CacheContext.StringTable.GetStringId($@"default_material"),
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid"),
                    Friction = 0.1f,
                    Restitution = 0.05f,
                    Density = 1000f,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid"),
                    RuntimeMaterialIndex = 1,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    Friction = 0.9f,
                    Restitution = 0.1f,
                    Density = 1000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    RuntimeMaterialIndex = 2,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    Friction = 0.9f,
                    Restitution = 0.1f,
                    Density = 1000,
                    WaterDragProperties = new List<Globals.Material.WaterDragProperty>()
                    {
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.5f,
                            DragQ = 2f,
                            DragE = 1.65f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.15f,
                            DragQ = 1f,
                            DragE = 1f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                    },
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    WaterRippleSmall = GetCachedTag<RenderWaterRipple>($@"fx\water\default_small"),
                    WaterRippleMedium = GetCachedTag<RenderWaterRipple>($@"fx\water\default_medium"),
                    WaterRippleLarge = GetCachedTag<RenderWaterRipple>($@"fx\water\default_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid"),
                    RuntimeMaterialIndex = 1,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                    Friction = 0.1f,
                    Restitution = 0.05f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thick_coolant"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                    RuntimeMaterialIndex = 4,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thick"),
                    Friction = 0.1f,
                    Restitution = 0.05f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft"),
                    ParentName = CacheContext.StringTable.GetStringId($@"default_material"),
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 1000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft"),
                    RuntimeMaterialIndex = 6,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    RuntimeMaterialIndex = 7,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_human"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    RuntimeMaterialIndex = 8,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_elite"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    RuntimeMaterialIndex = 8,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_grunt"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    RuntimeMaterialIndex = 8,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_jackal"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    RuntimeMaterialIndex = 8,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    RuntimeMaterialIndex = 8,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_prophet"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    RuntimeMaterialIndex = 8,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_bugger"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh"),
                    RuntimeMaterialIndex = 8,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_cloth"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    RuntimeMaterialIndex = 7,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    RuntimeMaterialIndex = 7,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_leafy"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant"),
                    RuntimeMaterialIndex = 17,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_bushy"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant"),
                    RuntimeMaterialIndex = 17,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_grassy"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant"),
                    RuntimeMaterialIndex = 17,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft"),
                    RuntimeMaterialIndex = 6,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic_vinyl"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    RuntimeMaterialIndex = 21,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic_vinyl_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_inorganic_vinyl"),
                    RuntimeMaterialIndex = 22,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic_vinyl_hum_warthog"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_inorganic_vinyl_hum"),
                    RuntimeMaterialIndex = 23,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft"),
                    RuntimeMaterialIndex = 6,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                    Friction = 0.85f,
                    Restitution = 0.05f,
                    Density = 1000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\terrain_snow\snow_looping\snow_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\terrain_snow"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain_snow"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                    RuntimeMaterialIndex = 25,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                    Friction = 0.75f,
                    Restitution = 0.05f,
                    Density = 900,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\terrain_snow\snow_looping\snow_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\terrain_snow\snow_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\terrain_snow"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough"),
                    ParentName = CacheContext.StringTable.GetStringId($@"default_material"),
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough"),
                    Friction = 0.8f,
                    Restitution = 0.1f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough"),
                    RuntimeMaterialIndex = 27,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_flesh"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    RuntimeMaterialIndex = 28,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_flesh_bugger"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic_flesh"),
                    RuntimeMaterialIndex = 29,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_flesh_brute"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic_flesh"),
                    RuntimeMaterialIndex = 29,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_bone"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    RuntimeMaterialIndex = 28,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough"),
                    RuntimeMaterialIndex = 27,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_armor"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    RuntimeMaterialIndex = 33,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_armor_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic_armor"),
                    RuntimeMaterialIndex = 34,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    RuntimeMaterialIndex = 33,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.75f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_rubber"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber"),
                    RuntimeMaterialIndex = 36,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.75f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_rubber"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber_hum_tire"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber_hum"),
                    RuntimeMaterialIndex = 37,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.9f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\havok\tire\tire_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\havok\tire\tire_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\havok\tire\tire_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_rubber_hum_tire"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_plastic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    RuntimeMaterialIndex = 33,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_plastic"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_plastic_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic_plastic"),
                    RuntimeMaterialIndex = 39,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_plastic"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_plastic_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic_plastic"),
                    RuntimeMaterialIndex = 39,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_plastic"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough"),
                    RuntimeMaterialIndex = 27,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh_combatform"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    RuntimeMaterialIndex = 42,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh_carrierform"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    RuntimeMaterialIndex = 42,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh_infectionform"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    RuntimeMaterialIndex = 42,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"infection"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_wood"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    RuntimeMaterialIndex = 28,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\organic_wood"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough"),
                    RuntimeMaterialIndex = 27,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_dirt"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_grass"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_grass\grass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_grass\grass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_grass\grass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_grass\grass_looping\grass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_grass\grass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_grass\grass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_grass\grass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_mud"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_mud\mud_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_mud\mud_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_mud\mud_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_mud\mud_looping\mud_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_mud\mud_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_mud\mud_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_mud\mud_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_gravel"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_gravel\gravel_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_gravel\gravel_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_gravel\gravel_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_gravel\gravel_looping\gravel_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_gravel\gravel_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_gravel\gravel_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_gravel\gravel_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_sand"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_sand\sand_looping\sand_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard"),
                    ParentName = CacheContext.StringTable.GetStringId($@"default_material"),
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard"),
                    Friction = 0.8f,
                    Restitution = 0.5f,
                    Density = 2300,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_stone\stone_looping\stone_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_stone"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard"),
                    RuntimeMaterialIndex = 53,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    RuntimeMaterialIndex = 54,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_masterchief"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin_player"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_weapon"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\human_weap_melee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\human_weap_melee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\human_weap_melee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\human_weap_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\human_weap_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\human_weap_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_warthog"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_ammo"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    RuntimeMaterialIndex = 54,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_grunt"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    RuntimeMaterialIndex = 60,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_chieftain"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    RuntimeMaterialIndex = 60,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_elite"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    RuntimeMaterialIndex = 60,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin_player"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_elite_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_cov_elite_small_looping\metal_thin_cov_elite_small_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin_cov_elite"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_weapon"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    RuntimeMaterialIndex = 60,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_banshee"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    RuntimeMaterialIndex = 60,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    RuntimeMaterialIndex = 54,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for_sentinel"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for"),
                    RuntimeMaterialIndex = 66,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"sentinel"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for_monitor"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for"),
                    RuntimeMaterialIndex = 66,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard"),
                    RuntimeMaterialIndex = 53,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    RuntimeMaterialIndex = 69,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_scorpion_tread"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\hard_metal_thick_hum_scorpion_tread"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_warthog"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\vehicle_hit_human"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_mongoose"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_turretap"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_chassis"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    RuntimeMaterialIndex = 69,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_hunter"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hard_metal_thick_cov_hunter"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hard_metal_thick_cov_hunter"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hard_metal_thick_cov_hunter"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_ghost"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hit_ghost_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hit_ghost"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hit_ghost"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hit_ghost_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hit_ghost"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hit_ghost"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_shade"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_shade_leg"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_shade"),
                    RuntimeMaterialIndex = 79,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 2,
                    Restitution = 1E-05f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_avturret"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_banshee"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_creep"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_wraith"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_throne"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    RuntimeMaterialIndex = 69,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_for_sentinel"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_for"),
                    RuntimeMaterialIndex = 86,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"sentinel"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_for_small_looping\metal_thick_for_small_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_for_sentinel"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh_pureform"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                    RuntimeMaterialIndex = 105,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                    Friction = 0.9f,
                    Restitution = 0.25f,
                    Density = 2300,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_stone\stone_looping\stone_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_stone"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard"),
                    RuntimeMaterialIndex = 53,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                             SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                             SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                             SurfaceIndex = 3,
                             SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    RuntimeMaterialIndex = 89,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum_scorpion"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum"),
                    RuntimeMaterialIndex = 90,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum_pelican"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum"),
                    RuntimeMaterialIndex = 90,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum_longsword"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum"),
                    RuntimeMaterialIndex = 90,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                             SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                             SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                             SurfaceIndex = 3,
                             SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    RuntimeMaterialIndex = 89,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_hunter"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov"),
                    RuntimeMaterialIndex = 94,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hard_metal_thick_cov_hunter"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hard_metal_thick_cov_hunter"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\hard_metal_thick_cov_hunter"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_wraith"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov"),
                    RuntimeMaterialIndex = 94,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_creep"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov"),
                    RuntimeMaterialIndex = 94,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_phantom"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov"),
                    RuntimeMaterialIndex = 94,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    RuntimeMaterialIndex = 89,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard"),
                    RuntimeMaterialIndex = 53,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_concrete\concrete_looping\concrete_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_concrete"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain_ice"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    RuntimeMaterialIndex = 100,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    Friction = 0.05f,
                    Restitution = 0.3f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_ice\ice_looping\ice_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_concrete"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain_stone"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    RuntimeMaterialIndex = 100,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_stone\stone_looping\stone_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_stone"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain_stone_rough"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_terrain_stone"),
                    RuntimeMaterialIndex = 102,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_stone\stone_looping\stone_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_stone"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain_concrete"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    RuntimeMaterialIndex = 100,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_concrete\concrete_looping\concrete_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_concrete\concrete_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_concrete"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard"),
                    RuntimeMaterialIndex = 53,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_floodflesh"),
                    Friction = 0.9f,
                    Restitution = 0.25f,
                    Density = 2300,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_stone\stone_looping\stone_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_stone\stone_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_stone"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle"),
                    ParentName = CacheContext.StringTable.GetStringId($@"default_material"),
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle"),
                    RuntimeMaterialIndex = 106,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    RuntimeMaterialIndex = 107,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_hum_warthog"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_glass_hum"),
                    RuntimeMaterialIndex = 108,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_hum_mongoose"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_glass_hum"),
                    RuntimeMaterialIndex = 108,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    RuntimeMaterialIndex = 107,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_for_unbreakable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_terrain_glass_unbreakable"),
                    RuntimeMaterialIndex = 223,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_powerup"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    RuntimeMaterialIndex = 107,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_reinforced"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    RuntimeMaterialIndex = 107,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle"),
                    RuntimeMaterialIndex = 106,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    RuntimeMaterialIndex = 115,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    RuntimeMaterialIndex = 115,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov"),
                    RuntimeMaterialIndex = 117,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag_ghost"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag"),
                    RuntimeMaterialIndex = 118,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag_banshee"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag"),
                    RuntimeMaterialIndex = 118,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag_wraith"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag"),
                    RuntimeMaterialIndex = 118,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag_creep"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_ag"),
                    RuntimeMaterialIndex = 118,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_pg"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov"),
                    RuntimeMaterialIndex = 117,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_pg_wraith"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_pg"),
                    RuntimeMaterialIndex = 123,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_pg_bfg"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_pg"),
                    RuntimeMaterialIndex = 123,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    RuntimeMaterialIndex = 115,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_for_sentinel"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_for"),
                    RuntimeMaterialIndex = 126,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_elec"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle"),
                    RuntimeMaterialIndex = 106,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    RuntimeMaterialIndex = 128,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech_hum"),
                    RuntimeMaterialIndex = 129,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine_warthog"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine"),
                    RuntimeMaterialIndex = 130,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine_scorpion"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine"),
                    RuntimeMaterialIndex = 130,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine_pelican"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine"),
                    RuntimeMaterialIndex = 130,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine_mongoose"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech_hum_engine"),
                    RuntimeMaterialIndex = 130,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    RuntimeMaterialIndex = 128,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_mech_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    RuntimeMaterialIndex = 128,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_mech"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2500,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle"),
                    RuntimeMaterialIndex = 106,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    RuntimeMaterialIndex = 137,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive_hum_bomb"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_explosive_hum"),
                    RuntimeMaterialIndex = 138,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive_hum_flamable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_explosive_hum"),
                    RuntimeMaterialIndex = 138,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    RuntimeMaterialIndex = 137,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive_cov_blamite"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_explosive_cov"),
                    RuntimeMaterialIndex = 141,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_explosive_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    RuntimeMaterialIndex = 137,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_explosive"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy"),
                    ParentName = CacheContext.StringTable.GetStringId($@"default_material"),
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy"),
                    RuntimeMaterialIndex = 144,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    RuntimeMaterialIndex = 145,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_hum_masterchief"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin_hum"),
                    RuntimeMaterialIndex = 146,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    RuntimeMaterialIndex = 145,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov_elite"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov"),
                    RuntimeMaterialIndex = 148,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin_player"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov_apturret"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov"),
                    RuntimeMaterialIndex = 148,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    RuntimeMaterialIndex = 145,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy"),
                    RuntimeMaterialIndex = 144,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    RuntimeMaterialIndex = 152,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    RuntimeMaterialIndex = 152,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov_jackal"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov"),
                    RuntimeMaterialIndex = 154,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_for"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    RuntimeMaterialIndex = 152,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_holo"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy"),
                    RuntimeMaterialIndex = 144,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_holo"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_holo_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_holo"),
                    RuntimeMaterialIndex = 157,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_holo"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_holo_hum_cortana"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_holo_hum"),
                    RuntimeMaterialIndex = 158,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_holo"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_holo_cov"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_holo"),
                    RuntimeMaterialIndex = 157,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_holo"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin_water_puddle"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                    RuntimeMaterialIndex = 3,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    Friction = 0.9f,
                    Restitution = 0.1f,
                    Density = 1000,
                    WaterDragProperties = new List<Globals.Material.WaterDragProperty>()
                    {
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.5f,
                            DragQ = 2f,
                            DragE = 1.65f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.15f,
                            DragQ = 1f,
                            DragE = 1f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                    },
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    WaterRippleSmall = GetCachedTag<RenderWaterRipple>($@"fx\water\default_small"),
                    WaterRippleMedium = GetCachedTag<RenderWaterRipple>($@"fx\water\default_medium"),
                    WaterRippleLarge = GetCachedTag<RenderWaterRipple>($@"fx\water\default_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin_water_shallow"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                    RuntimeMaterialIndex = 3,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    Friction = 0.9f,
                    Restitution = 0.1f,
                    Density = 1000,
                    WaterDragProperties = new List<Globals.Material.WaterDragProperty>()
                    {
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.5f,
                            DragQ = 2f,
                            DragE = 1.65f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.15f,
                            DragQ = 1f,
                            DragE = 1f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                    },
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    WaterRippleSmall = GetCachedTag<RenderWaterRipple>($@"fx\water\default_small"),
                    WaterRippleMedium = GetCachedTag<RenderWaterRipple>($@"fx\water\default_medium"),
                    WaterRippleLarge = GetCachedTag<RenderWaterRipple>($@"fx\water\default_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin_water_deep"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                    RuntimeMaterialIndex = 3,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    Friction = 0.9f,
                    Restitution = 0.1f,
                    Density = 1000,
                    WaterDragProperties = new List<Globals.Material.WaterDragProperty>()
                    {
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.5f,
                            DragQ = 2f,
                            DragE = 1.65f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.15f,
                            DragQ = 1f,
                            DragE = 1f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                    },
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    WaterRippleSmall = GetCachedTag<RenderWaterRipple>($@"fx\water\default_small"),
                    WaterRippleMedium = GetCachedTag<RenderWaterRipple>($@"fx\water\default_medium"),
                    WaterRippleLarge = GetCachedTag<RenderWaterRipple>($@"fx\water\default_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"liquid_thin_water_bottomless"),
                    ParentName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                    RuntimeMaterialIndex = 3,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"liquid_thin"),
                    Friction = 0.9f,
                    Restitution = 0.1f,
                    Density = 1000,
                    WaterDragProperties = new List<Globals.Material.WaterDragProperty>()
                    {
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.5f,
                            DragQ = 2f,
                            DragE = 1.65f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                        new Globals.Material.WaterDragProperty()
                        {
                            DragK = 0.15f,
                            DragQ = 1f,
                            DragE = 1f,
                            SuperFloater = 0.3f,
                            Floater = 0.7f,
                            Neutral = 1f,
                            Sinker = 1.3f,
                            SuperSinker = 1.7f,
                        },
                    },
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    WaterRippleSmall = GetCachedTag<RenderWaterRipple>($@"fx\water\default_small"),
                    WaterRippleMedium = GetCachedTag<RenderWaterRipple>($@"fx\water\default_medium"),
                    WaterRippleLarge = GetCachedTag<RenderWaterRipple>($@"fx\water\default_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_cloth_hum"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_cloth"),
                    RuntimeMaterialIndex = 16,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_cloth_hum_leather"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_cloth_hum"),
                    RuntimeMaterialIndex = 165,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_grating"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_grating_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_grating_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_grating_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_grating_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_grating_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_grating_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_for_cable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_for"),
                    RuntimeMaterialIndex = 99,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid_for_cable"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"bounds"),
                    RuntimeMaterialIndex = -1,
                    Friction = 0.1f,
                    Restitution = 0.1f,
                    Density = 1f,
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_underbrush"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_underbrush\underbrush_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_underbrush\underbrush_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_underbrush\underbrush_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_underbrush\underbrush_looping\underbrush_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_underbrush\underbrush_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_underbrush\underbrush_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_underbrush\underbrush_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_woodfloor"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\organic_wood\wood_looping\wood_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for_sentinel_enforcer"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for_sentinel"),
                    RuntimeMaterialIndex = 67,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"sentinel_enforcer"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for_sentinel_aggressor"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_for_sentinel"),
                    RuntimeMaterialIndex = 67,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"sentinel"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_for_sentinel_aggressor"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_for_sentinel"),
                    RuntimeMaterialIndex = 87,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"sentinel"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_for_small_looping\metal_thick_for_small_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_for_small"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_for_sentinel"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_wood_hollow"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic_wood"),
                    RuntimeMaterialIndex = 46,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\organic_wood"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_carpet"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_carpet\carpet_hit_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_carpet\carpet_hit_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_carpet\carpet_hit_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_carpet\carpet_hit_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_carpet\carpet_hit_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_carpet\carpet_hit_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_brute"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    RuntimeMaterialIndex = 60,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_elite_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_cov_elite_small_looping\metal_thin_cov_elite_small_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin_cov_elite"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy"),
                    RuntimeMaterialIndex = 144,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_glass_thick"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    RuntimeMaterialIndex = 107,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_glass"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass_thick"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov_prophet"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov"),
                    RuntimeMaterialIndex = 148,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_flesh_brute_tartarus"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic_flesh_brute"),
                    RuntimeMaterialIndex = 31,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic_flesh_brute_tartarus"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber_hum_tire_mongoose"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber_hum_tire"),
                    RuntimeMaterialIndex = 38,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.9f,
                    Restitution = 0.2f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\rubber\rubber_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\plastic_looping\plastic_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\havok\tire\tire_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\havok\tire\tire_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\havok\tire\tire_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_rubber_hum_tire_mongoose"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft"),
                    RuntimeMaterialIndex = 6,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_scarab"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov"),
                    RuntimeMaterialIndex = 94,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"scarab"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard"),
                    RuntimeMaterialIndex = 53,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_invulnerable"),
                    Friction = 0.9f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_fence"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_fence"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_fence"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_fence"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_fence"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_fence"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_fence"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_chopper"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_chopper_wheel"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_chopper"),
                    RuntimeMaterialIndex = 187,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.75f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\hard_metal_thick_cov_chopper_wheel"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_armor"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    RuntimeMaterialIndex = 145,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.7f,
                    Restitution = 0.2f,
                    Density = 500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy"),
                    RuntimeMaterialIndex = 144,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 100,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle"),
                    RuntimeMaterialIndex = 106,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood_shell"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    RuntimeMaterialIndex = 191,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood_membrane"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    RuntimeMaterialIndex = 191,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood_shell_breakable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_flood_shell"),
                    RuntimeMaterialIndex = 192,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass_thick"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_flood_membrane_breakable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_flood_membrane"),
                    RuntimeMaterialIndex = 193,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle_flood"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_scarab"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"scarab"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_cov"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_railing"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_railing"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_railing"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_railing"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_railing"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_hum_railing"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_hollow"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_med_looping\metal_thick_hum_hollow_med_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_hum_hollow_med"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_object"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_object_gascan"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_object"),
                    RuntimeMaterialIndex = 199,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_gas_can"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_gas_can"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_gas_can"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_gas_can"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_gas_can"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_gas_can"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\objects\havok\blitzcan"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_object_rattly"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_object"),
                    RuntimeMaterialIndex = 199,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\hum_object_rattly_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\hum_object_rattly_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\hum_object_rattly_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_rattly_looping\metal_thin_rattly_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\hum_object_rattly_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\hum_object_rattly_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\hum_object_rattly_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin_hum_obj_rattly"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_weapon_flagpole"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_weapon"),
                    RuntimeMaterialIndex = 57,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.1f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\weapons\flag\flag_drop"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\weapons\flag\flag_drop"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\weapons\flag\flag_drop"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\weapons\flag\melee_flag"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\weapons\flag\melee_flag"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\weapons\flag\melee_flag"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\objects\weapons\flag"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_hollow_huge"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_hollow"),
                    RuntimeMaterialIndex = 198,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_med_looping\metal_thick_hum_hollow_med_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_hum_hollow_huge"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_hollow_small"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_hollow"),
                    RuntimeMaterialIndex = 198,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_med_looping\metal_thick_hum_hollow_med_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_hum_hollow_tank_large"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_hum_hollow_med"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_inorganic_cardboard"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    RuntimeMaterialIndex = 21,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_inorganic"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\cardboard\cardboard_hits_small_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\cardboard\cardboard_hits_med_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\cardboard\cardboard_hits_med_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\cardboard\cardboard_smooth_looping\cardboard_smooth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\cardboard\cardboard_hits_small_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\cardboard\cardboard_hits_med_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\cardboard\cardboard_hits_med_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_inorganic_cardboard"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_object_hubcap"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_object"),
                    RuntimeMaterialIndex = 199,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.85f,
                    Restitution = 0.3f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\havok\hubcap_hit"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\havok\hubcap_hit"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\havok\hubcap_hit"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\havok\hubcap_looping\hubcap_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\havok\hubcap_hit"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\havok\hubcap_hit"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\havok\hubcap_hit"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\objects\havok\hubcap"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                    RuntimeMaterialIndex = -1,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"material"),
                    Friction = 0.9f,
                    Restitution = 0.2f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\submerged_default_material\submerged_thud_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\submerged_default_material\submerged_thud_small"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\submerged_default_material\submerged_thud_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\liquid\vehicle_water_looping\vehicle_water_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\liquid\water_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\liquid\liquid"),
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_floodflesh_pureform"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    RuntimeMaterialIndex = 42,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_floodflesh"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_dirt\dirt_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_floodflesh"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    RuntimeMaterialIndex = 47,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_floodflesh\floodflesh_looping\floodflesh_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_floodflesh_wet"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain_floodflesh"),
                    RuntimeMaterialIndex = 209,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_small_wet"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_wet_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_wet_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_floodflesh\floodflesh_wet_looping\floodflesh_wet_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_small_wet"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_wet_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hits_wet_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_floodflesh_dry"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain_floodflesh"),
                    RuntimeMaterialIndex = 209,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_dry_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_dry_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_dry_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_floodflesh\floodflesh_looping\floodflesh_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_hit_dry_small"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_dry_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_floodflesh\floodflesh_dry_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov_mauler_skid"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_cov"),
                    RuntimeMaterialIndex = 76,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.1f,
                    Restitution = 0.25f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\inorganic_rubber"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_hornet"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 2000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_bushy_dynamic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant_bushy"),
                    RuntimeMaterialIndex = 19,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_hits\plant_bushy_dyn_hit"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_hits\plant_bushy_dyn_hit"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_hits\plant_bushy_dyn_hit"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_looping\soft_organic_plant_bushy_dyn_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_hits\plant_bushy_dyn_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_hits\plant_bushy_dyn_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_bushy_dynamic\soft_organic_plant_bushy_dyn_hits\plant_bushy_dyn_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant_bushy_dynamic"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_viney_dynamic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant"),
                    RuntimeMaterialIndex = 17,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_leafy_dynamic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant_leafy"),
                    RuntimeMaterialIndex = 18,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic_hits"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic_hits"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant_leafy_dynamic"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_wood_sapling_dynamic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic_wood"),
                    RuntimeMaterialIndex = 46,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_sapling_dynamic\tough_organic_wood_sapling_dyn_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_sapling_dynamic\tough_organic_wood_sapling_dyn_hits"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_sapling_dynamic\tough_organic_wood_sapling_dyn_hits"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_dirt\dirt_looping\dirt_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_sapling_dynamic\tough_organic_wood_sapling_dyn_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_sapling_dynamic\tough_organic_wood_sapling_dyn_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_sapling_dynamic\tough_organic_wood_sapling_dyn_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_organic_wood_sapling_dynamic"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_organic_wood_tree_dynamic"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_organic_wood"),
                    RuntimeMaterialIndex = 46,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_organic"),
                    Friction = 0.8f,
                    Restitution = 0.2f,
                    Density = 1250,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_tree_dynamic\tough_organic_wood_tree_dynamic_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_tree_dynamic\tough_organic_wood_tree_dynamic_hits"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_tree_dynamic\tough_organic_wood_tree_dynamic_hits"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\tough_organic_wood_tree_dynamic\organic_wood_tree_dyn_looping\organic_wood_tree_dyn_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_tree_dynamic\tough_organic_wood_tree_dynamic_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_tree_dynamic\tough_organic_wood_tree_dynamic_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\tough_organic_wood_tree_dynamic\tough_organic_wood_tree_dynamic_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_organic_wood_tree_dynamic"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_leafy_brown"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant_leafy"),
                    RuntimeMaterialIndex = 18,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_plant_pine"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_plant"),
                    RuntimeMaterialIndex = 17,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actor"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic\soft_organic_plant_leafy_dynamic"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_plant\soft_organic_plant_hits_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_plant"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum_equipment"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_hum"),
                    RuntimeMaterialIndex = 55,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.95f,
                    Restitution = 0.1f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\objects\weapons\flag"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_equipment"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov"),
                    RuntimeMaterialIndex = 60,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.95f,
                    Restitution = 0.1f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain_glass_unbreakable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    RuntimeMaterialIndex = 100,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_terrain"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2750,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\brittle\glass\glass_looping\glass_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\brittle\glass\glass_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_cloth_hum_netting"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_cloth_hum"),
                    RuntimeMaterialIndex = 165,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_terrain_beach"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                    RuntimeMaterialIndex = 25,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_terrain"),
                    Friction = 0.85f,
                    Restitution = 0.05f,
                    Density = 1000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\terrain_sand\sand_looping\sand_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\terrain_sand\sand_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\terrain_snow"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                    RuntimeMaterialIndex = 178,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_invincible_monitor"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh_pureform"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                    RuntimeMaterialIndex = 183,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov_instantcover"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov"),
                    RuntimeMaterialIndex = 154,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov_instantcover_out"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov_instantcover"),
                    RuntimeMaterialIndex = 228,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov_instantcover_in"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick_cov_instantcover"),
                    RuntimeMaterialIndex = 228,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_invincible"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_scarab_interior"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_scarab"),
                    RuntimeMaterialIndex = 184,
                    Flags = TagTool.Tags.Definitions.Globals.MaterialFlags.RadXferInterior,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"scarab"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_equipment_powerdrain"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thin_cov_equipment"),
                    RuntimeMaterialIndex = 222,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thin"),
                    Friction = 0.95f,
                    Restitution = 0.8f,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_cov_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_med_h3"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\metal_thin_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thin\metal_thin_looping\metal_thin_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thin\cov_weap_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thin"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum_pelican_interior"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_hum_pelican"),
                    RuntimeMaterialIndex = 92,
                    Flags = TagTool.Tags.Definitions.Globals.MaterialFlags.RadXferInterior,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_phantom_interior"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_solid_cov_phantom"),
                    RuntimeMaterialIndex = 98,
                    Flags = TagTool.Tags.Definitions.Globals.MaterialFlags.RadXferInterior,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 10000,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_solid\metal_solid_looping\metal_solid_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_small_h3_actee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_solid\metal_solid_med_h3_actee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_solid"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_scarab"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                    RuntimeMaterialIndex = 13,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_organic"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"soft_organic_flesh_hunter"),
                    Friction = 0.85f,
                    Restitution = 0.4f,
                    Density = 750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\soft\organic_flesh\melee_impact"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\soft\soft_organic_cloth"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thick_airlock"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    RuntimeMaterialIndex = 152,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thick"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber_hum_ball"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_inorganic_rubber_hum"),
                    RuntimeMaterialIndex = 37,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_inorganic"),
                    Friction = 0.2f,
                    Restitution = 1,
                    Density = 1500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\gear\soccer_ball\soccerball_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\gear\soccer_ball\soccerball_hits"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\gear\soccer_ball\soccerball_hits"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\gear\soccer_ball\tire_rolling_soccer_ball\tire_rolling_soccer_ball"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\gear\soccer_ball\soccerball_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\gear\soccer_ball\soccerball_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\gear\soccer_ball\soccerball_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\objects\havok\soccer_ball"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_terrain_ice_breakable"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_terrain_ice"),
                    RuntimeMaterialIndex = 101,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"brittle"),
                    Friction = 0.05f,
                    Restitution = 0.3f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_large"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\terrain_ice\ice_looping\ice_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\terrain_ice\ice_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\terrain_concrete"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum_galvanized"),
                    ParentName = CacheContext.StringTable.GetStringId($@"hard_metal_thick_hum"),
                    RuntimeMaterialIndex = 70,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_thick"),
                    Friction = 0.8f,
                    Restitution = 0.35f,
                    Density = 6500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\hard\metal_thick_hum_hollow_med"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"brittle_elec_cov_scarab"),
                    ParentName = CacheContext.StringTable.GetStringId($@"brittle_elec_cov"),
                    RuntimeMaterialIndex = 117,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"hard_metal_solid"),
                    Friction = 0.6f,
                    Restitution = 0.1f,
                    Density = 2000,
                    BreakableSurface = GetCachedTag<BreakableSurface>($@"globals\glass"),
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\hard\metal_thick\metal_thick_looping\metal_thick_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\hard\metal_thick\metal_thick_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\brittle\glass"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov_chieftain"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_thin_cov"),
                    RuntimeMaterialIndex = 148,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_thin"),
                    Friction = 0.5f,
                    Restitution = 0.1f,
                    Density = 1,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                    ParentName = CacheContext.StringTable.GetStringId($@"energy_shield_solid"),
                    RuntimeMaterialIndex = 190,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"energy_shield_solid_melee"),
                    Friction = 0.2f,
                    Restitution = 0.7f,
                    Density = 100,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\energy\energy_small"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\energy\energy_medium"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\energy\blue_plasma_looping\blue_plasma_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\energy\cortana_melee"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\energy\cortana_melee"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\energy\cortana_melee"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\energy\energy"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"soft_floodflesh_infection"),
                    ParentName = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                    RuntimeMaterialIndex = 183,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"soft_floodflesh"),
                    SpecificArmor = CacheContext.StringTable.GetStringId($@"infection"),
                    Friction = 0.8f,
                    Restitution = 0.05f,
                    Density = 2500,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\soft\soft_organic_cloth\cloth_hits_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\soft\soft_organic_cloth\cloth_looping\cloth_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\squish_hits"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\tough_floodflesh"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
                new Globals.Material()
                {
                    Name = CacheContext.StringTable.GetStringId($@"tough_terrain_woodfloor_docks"),
                    ParentName = CacheContext.StringTable.GetStringId($@"tough_terrain_woodfloor"),
                    RuntimeMaterialIndex = 171,
                    GeneralArmor = CacheContext.StringTable.GetStringId($@"tough_terrain"),
                    Friction = 0.8f,
                    Restitution = 0.15f,
                    Density = 1750,
                    SoundSweetenerSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerRolling = GetCachedTag<SoundLooping>($@"sound\materials\tough\organic_wood\wood_looping\wood_looping"),
                    SoundSweetenerMeleeSmall = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeMedium = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    SoundSweetenerMeleeLarge = GetCachedTag<Sound>($@"sound\materials\tough\organic_wood\wood_med"),
                    MaterialEffects = GetCachedTag<MaterialEffects>($@"fx\material_effects\materials\tough\terrain_dirt"),
                    UnderwaterProxies = new List<Globals.Material.UnderwaterProxy>()
                    {
                        new Globals.Material.UnderwaterProxy()
                        {
                            SurfaceName = CacheContext.StringTable.GetStringId($@"liquid_thin_water"),
                            SubmergedName = CacheContext.StringTable.GetStringId($@"submerged_default_material"),
                            SurfaceIndex = 3,
                            SubmergedIndex = 207,
                        },
                    },
                    RuntimeRainMaterialIndex = -1,
                },
            };
            matg.MultiplayerGlobals = GetCachedTag<MultiplayerGlobals>($@"multiplayer\multiplayer_globals");
            matg.SurvivalGlobals = GetCachedTag<SurvivalModeGlobals>($@"multiplayer\survival_mode_globals");
            matg.CinematicGlobals = new List<Globals.CinematicsGlobals>()
            {
                new Globals.CinematicsGlobals()
                {
                    CinematicAnchor = GetCachedTag<Scenery>($@"objects\cinematics\cinematic_anchor\cinematic_anchor"),
                    CinematicFilmAperture = 76f,
                },
            };
            matg.CampaignMetagameGlobals = new List<Globals.CampaignMetagameGlobal>()
            {
                new Globals.CampaignMetagameGlobal
                {
                    FriendlyDeathPenalty = 50,
                    DeathPenalty = 25,
                    BetrayalPenalty = 50,
                    MultiKillCount = 2,
                    MultiKillWindow = 2,
                    EmpKillWindow = 2,
                    HijackKillWindowPeriod = 10f,
                    SkyjackKillWindowPeriod = 10f,
                    FirstWeaponSpree = 5,
                    SecondWeaponSpree = 10,
                    KillingSpree = 10,
                    KillingFrenzy = 20,
                    RunningRiot = 30,
                    Rampage = 40,
                    Untouchable = 50,
                    Invincible = 100,
                    DoubleKill = 2,
                    TripleKill = 3,
                    Overkill = 4,
                    Killtacular = 5,
                    Killtrocity = 6,
                    Killimanjaro = 7,
                    Killtastrophe = 8,
                    Killpocalypse = 9,
                    Killionaire = 10,
                    Medals = new List<Globals.CampaignMetagameGlobal.Medal>()
                    {
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 3f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 2f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_double_kill"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 3f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_triple_kill"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 4f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_overkill"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 5f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killtacular"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 6f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killtrocity"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 7f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killamanjaro"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 8f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killtastrophe"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 9f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killpocalpyse"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 10f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killionaire"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 50,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killing_spree"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 100,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_killing_frenzy"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 250,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_running_riot"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 500,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_rampage"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 750,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_untouchable"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 1000,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_invincible"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 500,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_splatter_spree"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 1000,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_vehicluar_manslaughter"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 500,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_sniper_spree"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 1000,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_sharpshooter"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 500,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_shotgun_spree"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 1000,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_open_season"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 500,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_stick_spree"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 1000,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_corrected"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 500,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_sword_spree"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 1000,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_slice_n_dice"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 500,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_hammer_spree"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            AwardedPoints = 1000,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_ball_peen_buster"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                            MedalUptime = 2,
                            EventName = CacheContext.StringTable.GetStringId($@"survival_hero"),
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1.5f,
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            MedalUptime = 2,
                        },
                        new Globals.CampaignMetagameGlobal.Medal
                        {
                            Multiplier = 1f,
                        },
                    },
                    Difficulty = new List<Globals.CampaignMetagameGlobal.MultiplierBlock>()
                    {
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 0.25f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 1f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 2f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 4f,
                        },
                    },
                    PrimarySkulls = new List<Globals.CampaignMetagameGlobal.MultiplierBlock>()
                    {
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 3f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 1.5f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 1.5f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 1.5f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 1.5f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 2f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 1.5f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 2f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 2f,
                        },
                    },
                    SecondarySkulls = new List<Globals.CampaignMetagameGlobal.MultiplierBlock>()
                    {
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 0f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 0f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 0f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 0f,
                        },
                        new Globals.CampaignMetagameGlobal.MultiplierBlock
                        {
                            Multiplier = 0f,
                        },
                    },
                },
            };
            matg.LanguagePacks = new Globals.LanguagePack[12]
            {
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
                new Globals.LanguagePack
                {
                    StringReferenceAddress = new Cache.PlatformUnsignedValue(0x0),
                    StringDataAddress = new Cache.PlatformUnsignedValue(0x0),
                    IndexTableHash = new byte[20],
                    StringDataHash = new byte[20],
                },
            };
            matg.RasterizerGlobals = GetCachedTag<RasterizerGlobals>($@"globals\rasterizer_globals");
            matg.DefaultCameraFxSettings = GetCachedTag<CameraFxSettings>($@"globals\default");
            matg.DefaultWindSettings = GetCachedTag<Wind>($@"globals\default_wind");
            matg.CollisionDamageEffect = GetCachedTag<DamageEffect>($@"globals\collision_damage\collision");
            matg.CollisionDamage = GetCachedTag<CollisionDamage>($@"globals\collision_damage\default");
            matg.GlobalWaterMaterial = CacheContext.StringTable.GetStringId($@"liquid_thin_water");
            matg.GlobalWaterMaterialIndex = 3;
            matg.EffectGlobals = GetCachedTag<EffectGlobals>($@"globals\effect_globals");
            matg.GameProgressionGlobals = GetCachedTag<GameProgression>($@"globals\game_progression");
            matg.AchievementGlobals = GetCachedTag<Achievements>($@"globals\global_achievements");
            matg.InputGlobals = GetCachedTag<InputGlobals>($@"globals\input_globals");
            matg.Unknown266 = 1f;
            matg.Unknown267 = 0.9f;
            matg.Unknown268 = 3.5f;
            matg.Unknown269 = 5f;
            matg.Unknown270 = new TagTool.Tags.TagFunction()
            {
                Data = new byte[76]
                {
                    0x08, 0x34, 0x00, 0x00, 0x9A, 0x99, 0x99, 0x3E, 0x00, 0x00,
                    0x80, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x00,
                    0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0xCD,
                    0x7B, 0x14, 0x2E, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x80, 0x3F, 0x07, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0x7F,
                    0x40, 0xCB, 0xA1, 0xBF, 0xE0, 0x00, 0x78, 0x3E, 0x81, 0x31,
                    0xDF, 0x3C, 0xBC, 0x9C, 0x7E, 0x3F,
                },
            };
            matg.Unknown272 = 1.5f;
            matg.Unknown273 = 40f;
            matg.Unknown274 = 0.5f;
            matg.Unknown275 = 3f;
            matg.DamageReportingTypes = new List<Globals.DamageReportingType>()
            {
                new Globals.DamageReportingType
                {
                    Index = 1,
                    Name = "drt_unknown",
                },
                new Globals.DamageReportingType
                {
                    Index = 2,
                    Name = "drt_falling_damage",
                },
                new Globals.DamageReportingType
                {
                    Index = 3,
                    Name = "drt_collision_damage",
                },
                new Globals.DamageReportingType
                {
                    Index = 4,
                    Name = "drt_armor_lock_crush",
                },
                new Globals.DamageReportingType
                {
                    Index = 5,
                    Name = "drt_melee",
                },
                new Globals.DamageReportingType
                {
                    Index = 6,
                    Name = "drt_explosion",
                },
                new Globals.DamageReportingType
                {
                    Index = 7,
                    Name = "drt_magnum_pistol"
                },
                new Globals.DamageReportingType
                {
                    Index = 8,
                    Name = "drt_plasma_pistol",
                },
                new Globals.DamageReportingType
                {
                    Index = 9,
                    Name = "drt_needler",
                },
                new Globals.DamageReportingType
                {
                    Index = 10,
                    Name = "drt_excavator",
                },
                new Globals.DamageReportingType
                {
                    Index = 11,
                    Name = "drt_smg",
                },
                new Globals.DamageReportingType
                {
                    Index = 12,
                    Name = "drt_plasma_rifle",
                },
                new Globals.DamageReportingType
                {
                    Index = 13,
                    Name = "drt_battle_rifle",
                },
                new Globals.DamageReportingType
                {
                    Index = 14,
                    Name = "drt_carbine",
                },
                new Globals.DamageReportingType
                {
                    Index = 15,
                    Name = "drt_shotgun",
                },
                new Globals.DamageReportingType
                {
                    Index = 16,
                    Name = "drt_sniper_rifle",
                },
                new Globals.DamageReportingType
                {
                    Index = 17,
                    Name = "drt_beam_rifle",
                },
                new Globals.DamageReportingType
                {
                    Index = 18,
                    Name = "drt_assault_rifle",
                },
                new Globals.DamageReportingType
                {
                    Index = 19,
                    Name = "drt_spike_rifle",
                },
                new Globals.DamageReportingType
                {
                    Index = 20,
                    Name = "drt_flak_cannon",
                },
                new Globals.DamageReportingType
                {
                    Index = 21,
                    Name = "drt_missle_launcher",
                },
                new Globals.DamageReportingType
                {
                    Index = 22,
                    Name = "drt_rocket_launcher",
                },
                new Globals.DamageReportingType
                {
                    Index = 23,
                    Name = "drt_spartan_laser",
                },
                new Globals.DamageReportingType
                {
                    Index = 24,
                    Name = "drt_brute_shot",
                },
                new Globals.DamageReportingType
                {
                    Index = 25,
                    Name = "drt_flame_thrower",
                },
                new Globals.DamageReportingType
                {
                    Index = 26,
                    Name = "drt_sentinal_gun",
                },
                new Globals.DamageReportingType
                {
                    Index = 27,
                    Name = "drt_energy_blade",
                },
                new Globals.DamageReportingType
                {
                    Index = 28,
                    Name = "drt_gravity_hammer",
                },
                new Globals.DamageReportingType
                {
                    Index = 29,
                    Name = "drt_frag_grenade",
                },
                new Globals.DamageReportingType
                {
                    Index = 30,
                    Name = "drt_plasma_grenade",
                },
                new Globals.DamageReportingType
                {
                    Index = 31,
                    Name = "drt_claymore_grenade",
                },
                new Globals.DamageReportingType
                {
                    Index = 32,
                    Name = "drt_firebomb_grenade",
                },
                new Globals.DamageReportingType
                {
                    Index = 33,
                    Name = "drt_flag",
                },
                new Globals.DamageReportingType
                {
                    Index = 34,
                    Name = "drt_bomb",
                },
                new Globals.DamageReportingType
                {
                    Index = 35,
                    Name = "drt_bomb_explosion",
                },
                new Globals.DamageReportingType
                {
                    Index = 36,
                    Name = "drt_ball",
                },
                new Globals.DamageReportingType
                {
                    Index = 37,
                    Name = "drt_human_turret",
                },
                new Globals.DamageReportingType
                {
                    Index = 38,
                    Name = "drt_plasma_cannon",
                },
                new Globals.DamageReportingType
                {
                    Index = 39,
                    Name = "drt_plasma_mortar",
                },
                new Globals.DamageReportingType
                {
                    Index = 40,
                    Name = "drt_plasma_turret",
                },
                new Globals.DamageReportingType
                {
                    Index = 41,
                    Name = "drt_shade_turret",
                },
                new Globals.DamageReportingType
                {
                    Index = 42,
                    Name = "drt_banshee",
                },
                new Globals.DamageReportingType
                {
                    Index = 43,
                    Name = "drt_ghost",
                },
                new Globals.DamageReportingType
                {
                    Index = 44,
                    Name = "drt_mongoose",
                },
                new Globals.DamageReportingType
                {
                    Index = 45,
                    Name = "drt_scorpion",
                },
                new Globals.DamageReportingType
                {
                    Index = 46,
                    Name = "drt_scorpion_gunner",
                },
                new Globals.DamageReportingType
                {
                    Index = 47,
                    Name = "drt_spectre_driver",
                },
                new Globals.DamageReportingType
                {
                    Index = 48,
                    Name = "drt_spectre_gunner",
                },
                new Globals.DamageReportingType
                {
                    Index = 49,
                    Name = "drt_warthog_driver",
                },
                new Globals.DamageReportingType
                {
                    Index = 50,
                    Name = "drt_warthog_gunner",
                },
                new Globals.DamageReportingType
                {
                    Index = 51,
                    Name = "drt_warthog_gunner_gauss",
                },
                new Globals.DamageReportingType
                {
                    Index = 52,
                    Name = "drt_wraith",
                },
                new Globals.DamageReportingType
                {
                    Index = 53,
                    Name = "drt_wraith_antiinfantry",
                },
                new Globals.DamageReportingType
                {
                    Index = 54,
                    Name = "drt_tank",
                },
                new Globals.DamageReportingType
                {
                    Index = 55,
                    Name = "drt_chopper",
                },
                new Globals.DamageReportingType
                {
                    Index = 56,
                    Name = "drt_hornet",
                },
                new Globals.DamageReportingType
                {
                    Index = 57,
                    Name = "drt_mantis",
                },
                new Globals.DamageReportingType
                {
                    Index = 58,
                    Name = "drt_mauler",
                },
                new Globals.DamageReportingType
                {
                    Index = 59,
                    Name = "drt_sentinel_beam",
                },
                new Globals.DamageReportingType
                {
                    Index = 60,
                    Name = "drt_sentinel_rpg",
                },
                new Globals.DamageReportingType
                {
                    Index = 61,
                    Name = "drt_teleporter",
                },
                new Globals.DamageReportingType
                {
                    Index = 62,
                    Name = "drt_proximity_mine",
                },
                new Globals.DamageReportingType
                {
                    Index = 63,
                    Name = "drt_dmr",
                },
                new Globals.DamageReportingType
                {
                    Index = 18,
                    Version = 1,
                    Name = "drt_assault_rifle_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 18,
                    Version = 2,
                    Name = "drt_assault_rifle_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 18,
                    Version = 3,
                    Name = "drt_assault_rifle_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 18,
                    Version = 4,
                    Name = "drt_assault_rifle_v4",
                },
                new Globals.DamageReportingType
                {
                    Index = 18,
                    Version = 5,
                    Name = "drt_assault_rifle_v5",
                },
                new Globals.DamageReportingType
                {
                    Index = 18,
                    Version = 6,
                    Name = "drt_assault_rifle_v6",
                },
                new Globals.DamageReportingType
                {
                    Index = 13,
                    Version = 1,
                    Name = "drt_battle_rifle_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 13,
                    Version = 2,
                    Name = "drt_battle_rifle_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 13,
                    Version = 3,
                    Name = "drt_battle_rifle_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 13,
                    Version = 4,
                    Name = "drt_battle_rifle_v4",
                },
                new Globals.DamageReportingType
                {
                    Index = 13,
                    Version = 5,
                    Name = "drt_battle_rifle_v5",
                },
                new Globals.DamageReportingType
                {
                    Index = 13,
                    Version = 6,
                    Name = "drt_battle_rifle_v6",
                },
                new Globals.DamageReportingType
                {
                    Index = 63,
                    Version = 1,
                    Name = "drt_dmr_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 63,
                    Version = 2,
                    Name = "drt_dmr_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 63,
                    Version = 3,
                    Name = "drt_dmr_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 63,
                    Version = 4,
                    Name = "drt_dmr_v4",
                },
                new Globals.DamageReportingType
                {
                    Index = 63,
                    Version = 5,
                    Name = "drt_dmr_v5",
                },
                new Globals.DamageReportingType
                {
                    Index = 63,
                    Version = 6,
                    Name = "drt_dmr_v6",
                },
                new Globals.DamageReportingType
                {
                    Index = 11,
                    Version = 1,
                    Name = "drt_smg_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 11,
                    Version = 2,
                    Name = "drt_smg_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 11,
                    Version = 3,
                    Name = "drt_smg_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 11,
                    Version = 4,
                    Name = "drt_smg_v4",
                },
                new Globals.DamageReportingType
                {
                    Index = 11,
                    Version = 5,
                    Name = "drt_smg_v5",
                },
                new Globals.DamageReportingType
                {
                    Index = 11,
                    Version = 6,
                    Name = "drt_smg_v6",
                },
                new Globals.DamageReportingType
                {
                    Index = 12,
                    Version = 1,
                    Name = "drt_plasma_rifle_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 12,
                    Version = 2,
                    Name = "drt_plasma_rifle_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 12,
                    Version = 3,
                    Name = "drt_plasma_rifle_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 12,
                    Version = 4,
                    Name = "drt_plasma_rifle_v4",
                },
                new Globals.DamageReportingType
                {
                    Index = 12,
                    Version = 5,
                    Name = "drt_plasma_rifle_v5",
                },
                new Globals.DamageReportingType
                {
                    Index = 12,
                    Version = 6,
                    Name = "drt_plasma_rifle_v6",
                },
                new Globals.DamageReportingType
                {
                    Index = 14,
                    Version = 1,
                    Name = "drt_carbine_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 14,
                    Version = 2,
                    Name = "drt_carbine_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 14,
                    Version = 3,
                    Name = "drt_carbine_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 14,
                    Version = 4,
                    Name = "drt_carbine_v4",
                },
                new Globals.DamageReportingType
                {
                    Index = 14,
                    Version = 5,
                    Name = "drt_carbine_v5",
                },
                new Globals.DamageReportingType
                {
                    Index = 14,
                    Version = 6,
                    Name = "drt_carbine_v6",
                },
                new Globals.DamageReportingType
                {
                    Index = 7,
                    Version = 1,
                    Name = "drt_magnum_pistol_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 7,
                    Version = 2,
                    Name = "drt_magnum_pistol_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 7,
                    Version = 3,
                    Name = "drt_magnum_pistol_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 10,
                    Version = 1,
                    Name = "drt_excavator_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 10,
                    Version = 2,
                    Name = "drt_excavator_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 10,
                    Version = 3,
                    Name = "drt_excavator_v3",
                },
                new Globals.DamageReportingType
                {
                    Index = 8,
                    Version = 1,
                    Name = "drt_plasma_pistol_v1",
                },
                new Globals.DamageReportingType
                {
                    Index = 8,
                    Version = 2,
                    Name = "drt_plasma_pistol_v2",
                },
                new Globals.DamageReportingType
                {
                    Index = 8,
                    Version = 3,
                    Name = "drt_plasma_pistol_v3",
                },
                new Globals.DamageReportingType
                {
                    Name = "drt_unknown",
                },
            };
            CacheContext.Serialize(Stream, tag, matg);
        }
    }
}
